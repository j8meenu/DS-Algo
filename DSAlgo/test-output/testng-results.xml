<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="55" passed="54" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-04T15:46:31 EDT" name="Suite" finished-at="2022-10-04T15:50:41 EDT" duration-ms="249587">
    <groups>
    </groups>
    <test started-at="2022-10-04T15:46:31 EDT" name="Test" finished-at="2022-10-04T15:50:41 EDT" duration-ms="249587">
      <class name="numpyninja.Tests.TreeTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:49:43 EDT" name="setUp" finished-at="2022-10-04T15:49:44 EDT" duration-ms="949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getOverviewOfTreesLink()[pri:0, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:49:44 EDT" name="getOverviewOfTreesLink" finished-at="2022-10-04T15:49:47 EDT" duration-ms="3068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getOverviewOfTreesLink -->
        <test-method signature="getTerminologiesLink()[pri:1, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:49:47 EDT" name="getTerminologiesLink" finished-at="2022-10-04T15:49:51 EDT" duration-ms="3692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTerminologiesLink -->
        <test-method signature="getTypesOfTreesLink()[pri:2, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:49:51 EDT" name="getTypesOfTreesLink" finished-at="2022-10-04T15:49:54 EDT" duration-ms="3076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTypesOfTreesLink -->
        <test-method signature="getTreeTraversalsLink()[pri:3, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:49:54 EDT" name="getTreeTraversalsLink" finished-at="2022-10-04T15:49:57 EDT" duration-ms="3065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTreeTraversalsLink -->
        <test-method signature="getTraversalsIllustrationLink()[pri:4, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:49:57 EDT" name="getTraversalsIllustrationLink" finished-at="2022-10-04T15:50:00 EDT" duration-ms="3095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTraversalsIllustrationLink -->
        <test-method signature="getBinaryTreesLink()[pri:5, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:00 EDT" name="getBinaryTreesLink" finished-at="2022-10-04T15:50:03 EDT" duration-ms="3213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBinaryTreesLink -->
        <test-method signature="getTypesOfBinaryTreesLink()[pri:6, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:03 EDT" name="getTypesOfBinaryTreesLink" finished-at="2022-10-04T15:50:08 EDT" duration-ms="4550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTypesOfBinaryTreesLink -->
        <test-method signature="getImplementaionInPythonLink()[pri:7, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:08 EDT" name="getImplementaionInPythonLink" finished-at="2022-10-04T15:50:11 EDT" duration-ms="3402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getImplementaionInPythonLink -->
        <test-method signature="getBinaryTreeTraversalsLink()[pri:8, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:11 EDT" name="getBinaryTreeTraversalsLink" finished-at="2022-10-04T15:50:15 EDT" duration-ms="3240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBinaryTreeTraversalsLink -->
        <test-method signature="getImplementationOfbinaryTreeLink()[pri:9, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:15 EDT" name="getImplementationOfbinaryTreeLink" finished-at="2022-10-04T15:50:18 EDT" duration-ms="3451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getImplementationOfbinaryTreeLink -->
        <test-method signature="getApplicationOfbinaryTreeLink()[pri:10, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:18 EDT" name="getApplicationOfbinaryTreeLink" finished-at="2022-10-04T15:50:21 EDT" duration-ms="3450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getApplicationOfbinaryTreeLink -->
        <test-method signature="getBinarySearchTreesLink()[pri:11, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:21 EDT" name="getBinarySearchTreesLink" finished-at="2022-10-04T15:50:24 EDT" duration-ms="2839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBinarySearchTreesLink -->
        <test-method signature="getImplementationOfBSTLink()[pri:12, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:24 EDT" name="getImplementationOfBSTLink" finished-at="2022-10-04T15:50:28 EDT" duration-ms="3977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getImplementationOfBSTLink -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.TreeTest@5c7933ad]" started-at="2022-10-04T15:50:28 EDT" name="logout" finished-at="2022-10-04T15:50:28 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.TreeTest -->
      <class name="numpyninja.Tests.StackTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:numpyninja.Tests.StackTest@5b7a7f33]" started-at="2022-10-04T15:49:15 EDT" name="setUp" finished-at="2022-10-04T15:49:16 EDT" duration-ms="1196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="OperationInStack()[pri:0, instance:numpyninja.Tests.StackTest@5b7a7f33]" started-at="2022-10-04T15:49:16 EDT" name="OperationInStack" finished-at="2022-10-04T15:49:19 EDT" duration-ms="2772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OperationInStack -->
        <test-method signature="implementation()[pri:1, instance:numpyninja.Tests.StackTest@5b7a7f33]" started-at="2022-10-04T15:49:19 EDT" name="implementation" finished-at="2022-10-04T15:49:21 EDT" duration-ms="2436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implementation -->
        <test-method signature="applications()[pri:2, instance:numpyninja.Tests.StackTest@5b7a7f33]" started-at="2022-10-04T15:49:21 EDT" name="applications" finished-at="2022-10-04T15:49:24 EDT" duration-ms="3086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applications -->
        <test-method signature="practiceQuestion1()[pri:3, instance:numpyninja.Tests.StackTest@5b7a7f33]" started-at="2022-10-04T15:49:24 EDT" name="practiceQuestion1" finished-at="2022-10-04T15:49:27 EDT" duration-ms="2654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practiceQuestion1 -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.StackTest@5b7a7f33]" started-at="2022-10-04T15:49:27 EDT" name="logout" finished-at="2022-10-04T15:49:27 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.StackTest -->
      <class name="numpyninja.Tests.ResisterTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:numpyninja.Tests.ResisterTest@26abb146]" started-at="2022-10-04T15:47:17 EDT" name="setUp" finished-at="2022-10-04T15:47:25 EDT" duration-ms="7548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="RegisterWithEmptyField()[pri:0, instance:numpyninja.Tests.ResisterTest@26abb146]" started-at="2022-10-04T15:47:25 EDT" name="RegisterWithEmptyField" finished-at="2022-10-04T15:47:27 EDT" duration-ms="1926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithEmptyField -->
        <test-method signature="EmptyPasswordTest()[pri:1, instance:numpyninja.Tests.ResisterTest@26abb146]" started-at="2022-10-04T15:47:27 EDT" name="EmptyPasswordTest" finished-at="2022-10-04T15:47:29 EDT" duration-ms="2549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmptyPasswordTest -->
        <test-method signature="EmptyConfirmPassword()[pri:2, instance:numpyninja.Tests.ResisterTest@26abb146]" started-at="2022-10-04T15:47:29 EDT" name="EmptyConfirmPassword" finished-at="2022-10-04T15:47:31 EDT" duration-ms="1584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EmptyConfirmPassword -->
        <test-method signature="DiffPassword()[pri:3, instance:numpyninja.Tests.ResisterTest@26abb146]" started-at="2022-10-04T15:47:31 EDT" name="DiffPassword" finished-at="2022-10-04T15:47:33 EDT" duration-ms="2629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DiffPassword -->
        <test-method is-config="true" signature="logOut()[pri:0, instance:numpyninja.Tests.ResisterTest@26abb146]" started-at="2022-10-04T15:47:34 EDT" name="logOut" finished-at="2022-10-04T15:47:36 EDT" duration-ms="2125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOut -->
      </class> <!-- numpyninja.Tests.ResisterTest -->
      <class name="numpyninja.Tests.ArrayTest">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:22 EDT" name="beforetest" finished-at="2022-10-04T15:48:23 EDT" duration-ms="944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="ArraysInPythonClick()[pri:1, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:23 EDT" name="ArraysInPythonClick" finished-at="2022-10-04T15:48:27 EDT" duration-ms="3762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArraysInPythonClick -->
        <test-method signature="ArraysusinglistClick()[pri:2, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:27 EDT" name="ArraysusinglistClick" finished-at="2022-10-04T15:48:30 EDT" duration-ms="3172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArraysusinglistClick -->
        <test-method signature="BasicoperationsClick()[pri:3, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:30 EDT" name="BasicoperationsClick" finished-at="2022-10-04T15:48:33 EDT" duration-ms="3555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BasicoperationsClick -->
        <test-method signature="ApplicationofarraysClick()[pri:4, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:33 EDT" name="ApplicationofarraysClick" finished-at="2022-10-04T15:48:36 EDT" duration-ms="2706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApplicationofarraysClick -->
        <test-method signature="PracticequestionsClick()[pri:5, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:36 EDT" name="PracticequestionsClick" finished-at="2022-10-04T15:48:37 EDT" duration-ms="1169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PracticequestionsClick -->
        <test-method signature="SearchTheArrayClick()[pri:6, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:37 EDT" name="SearchTheArrayClick" finished-at="2022-10-04T15:48:42 EDT" duration-ms="4758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchTheArrayClick -->
        <test-method signature="MaxConsecutiveOnesClick()[pri:7, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:42 EDT" name="MaxConsecutiveOnesClick" finished-at="2022-10-04T15:48:45 EDT" duration-ms="2886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MaxConsecutiveOnesClick -->
        <test-method signature="FindNumbersClick()[pri:8, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:45 EDT" name="FindNumbersClick" finished-at="2022-10-04T15:48:47 EDT" duration-ms="2279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FindNumbersClick -->
        <test-method signature="SquaresTabClick()[pri:9, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:47 EDT" name="SquaresTabClick" finished-at="2022-10-04T15:48:52 EDT" duration-ms="4613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SquaresTabClick -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.ArrayTest@431cd9b2]" started-at="2022-10-04T15:48:52 EDT" name="logout" finished-at="2022-10-04T15:48:52 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.ArrayTest -->
      <class name="numpyninja.Tests.DataStructureTest">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:numpyninja.Tests.DataStructureTest@65f8f5ae]" started-at="2022-10-04T15:48:03 EDT" name="beforetest" finished-at="2022-10-04T15:48:16 EDT" duration-ms="12945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="TimeComplexity()[pri:1, instance:numpyninja.Tests.DataStructureTest@65f8f5ae]" started-at="2022-10-04T15:48:16 EDT" name="TimeComplexity" finished-at="2022-10-04T15:48:17 EDT" duration-ms="903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TimeComplexity -->
        <test-method signature="PracticeQuestion()[pri:2, instance:numpyninja.Tests.DataStructureTest@65f8f5ae]" started-at="2022-10-04T15:48:17 EDT" name="PracticeQuestion" finished-at="2022-10-04T15:48:18 EDT" duration-ms="900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PracticeQuestion -->
        <test-method signature="TryHere()[pri:3, instance:numpyninja.Tests.DataStructureTest@65f8f5ae]" started-at="2022-10-04T15:48:18 EDT" name="TryHere" finished-at="2022-10-04T15:48:20 EDT" duration-ms="1403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TryHere -->
        <test-method signature="TryEditor()[pri:4, instance:numpyninja.Tests.DataStructureTest@65f8f5ae]" started-at="2022-10-04T15:48:20 EDT" name="TryEditor" finished-at="2022-10-04T15:48:22 EDT" duration-ms="2272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TryEditor -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.DataStructureTest@65f8f5ae]" started-at="2022-10-04T15:48:22 EDT" name="logout" finished-at="2022-10-04T15:48:22 EDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.DataStructureTest -->
      <class name="numpyninja.Tests.SignInTest">
        <test-method is-config="true" signature="goToPage()[pri:0, instance:numpyninja.Tests.SignInTest@72c8e7b]" started-at="2022-10-04T15:47:36 EDT" name="goToPage" finished-at="2022-10-04T15:47:45 EDT" duration-ms="9863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToPage -->
        <test-method signature="dslogin()[pri:0, instance:numpyninja.Tests.SignInTest@72c8e7b]" started-at="2022-10-04T15:47:45 EDT" name="dslogin" finished-at="2022-10-04T15:48:02 EDT" duration-ms="16061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dslogin -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.SignInTest@72c8e7b]" started-at="2022-10-04T15:48:02 EDT" name="logout" finished-at="2022-10-04T15:48:03 EDT" duration-ms="1855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.SignInTest -->
      <class name="numpyninja.Tests.HomeTest">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:numpyninja.Tests.HomeTest@194fad1]" started-at="2022-10-04T15:46:58 EDT" name="beforetest" finished-at="2022-10-04T15:47:10 EDT" duration-ms="11597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="dropdownclick()[pri:1, instance:numpyninja.Tests.HomeTest@194fad1]" started-at="2022-10-04T15:47:10 EDT" name="dropdownclick" finished-at="2022-10-04T15:47:11 EDT" duration-ms="1370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropdownclick -->
        <test-method signature="DSgetstarted()[pri:2, instance:numpyninja.Tests.HomeTest@194fad1]" started-at="2022-10-04T15:47:11 EDT" name="DSgetstarted" finished-at="2022-10-04T15:47:12 EDT" duration-ms="997" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://dsportalapp.herokuapp.com/home] but found [https://dsportalapp.herokuapp.com/data-structures-introduction/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://dsportalapp.herokuapp.com/home] but found [https://dsportalapp.herokuapp.com/data-structures-introduction/]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at numpyninja.Tests.HomeTest.DSgetstarted(HomeTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DSgetstarted -->
        <test-method signature="SigninValidation()[pri:9, instance:numpyninja.Tests.HomeTest@194fad1]" started-at="2022-10-04T15:47:13 EDT" name="SigninValidation" finished-at="2022-10-04T15:47:14 EDT" duration-ms="1212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SigninValidation -->
        <test-method signature="RegisterValidation()[pri:10, instance:numpyninja.Tests.HomeTest@194fad1]" started-at="2022-10-04T15:47:14 EDT" name="RegisterValidation" finished-at="2022-10-04T15:47:15 EDT" duration-ms="849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterValidation -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.HomeTest@194fad1]" started-at="2022-10-04T15:47:15 EDT" name="logout" finished-at="2022-10-04T15:47:17 EDT" duration-ms="2215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.HomeTest -->
      <class name="numpyninja.Tests.GraphTest">
        <test-method is-config="true" signature="Graph()[pri:0, instance:numpyninja.Tests.GraphTest@57bc27f5]" started-at="2022-10-04T15:50:28 EDT" name="Graph" finished-at="2022-10-04T15:50:29 EDT" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Graph -->
        <test-method signature="graphtopic()[pri:0, instance:numpyninja.Tests.GraphTest@57bc27f5]" started-at="2022-10-04T15:50:29 EDT" name="graphtopic" finished-at="2022-10-04T15:50:32 EDT" duration-ms="3064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphtopic -->
        <test-method signature="graphRep()[pri:1, instance:numpyninja.Tests.GraphTest@57bc27f5]" started-at="2022-10-04T15:50:32 EDT" name="graphRep" finished-at="2022-10-04T15:50:35 EDT" duration-ms="3217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphRep -->
        <test-method signature="practicequestions()[pri:2, instance:numpyninja.Tests.GraphTest@57bc27f5]" started-at="2022-10-04T15:50:36 EDT" name="practicequestions" finished-at="2022-10-04T15:50:37 EDT" duration-ms="1982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practicequestions -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.GraphTest@57bc27f5]" started-at="2022-10-04T15:50:37 EDT" name="logout" finished-at="2022-10-04T15:50:41 EDT" duration-ms="3585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.GraphTest -->
      <class name="numpyninja.Tests.LandingPageTest">
        <test-method signature="goToPage()[pri:0, instance:numpyninja.Tests.LandingPageTest@52f27fbd]" started-at="2022-10-04T15:46:33 EDT" name="goToPage" finished-at="2022-10-04T15:46:56 EDT" duration-ms="23279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToPage -->
        <test-method is-config="true" signature="browserclose()[pri:0, instance:numpyninja.Tests.LandingPageTest@52f27fbd]" started-at="2022-10-04T15:46:57 EDT" name="browserclose" finished-at="2022-10-04T15:46:58 EDT" duration-ms="1792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserclose -->
      </class> <!-- numpyninja.Tests.LandingPageTest -->
      <class name="numpyninja.Tests.QueueTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:numpyninja.Tests.QueueTest@790da477]" started-at="2022-10-04T15:49:27 EDT" name="setUp" finished-at="2022-10-04T15:49:28 EDT" duration-ms="935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="impqueuebypython()[pri:0, instance:numpyninja.Tests.QueueTest@790da477]" started-at="2022-10-04T15:49:28 EDT" name="impqueuebypython" finished-at="2022-10-04T15:49:30 EDT" duration-ms="2539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- impqueuebypython -->
        <test-method signature="impusingcollectionsdeque()[pri:1, instance:numpyninja.Tests.QueueTest@790da477]" started-at="2022-10-04T15:49:30 EDT" name="impusingcollectionsdeque" finished-at="2022-10-04T15:49:35 EDT" duration-ms="4137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- impusingcollectionsdeque -->
        <test-method signature="impusingarray()[pri:2, instance:numpyninja.Tests.QueueTest@790da477]" started-at="2022-10-04T15:49:35 EDT" name="impusingarray" finished-at="2022-10-04T15:49:38 EDT" duration-ms="2965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- impusingarray -->
        <test-method signature="queueoperations()[pri:3, instance:numpyninja.Tests.QueueTest@790da477]" started-at="2022-10-04T15:49:38 EDT" name="queueoperations" finished-at="2022-10-04T15:49:40 EDT" duration-ms="2829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueoperations -->
        <test-method signature="practicequestions()[pri:4, instance:numpyninja.Tests.QueueTest@790da477]" started-at="2022-10-04T15:49:40 EDT" name="practicequestions" finished-at="2022-10-04T15:49:43 EDT" duration-ms="2635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practicequestions -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.QueueTest@790da477]" started-at="2022-10-04T15:49:43 EDT" name="logout" finished-at="2022-10-04T15:49:43 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.QueueTest -->
      <class name="numpyninja.Tests.LinkedListTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:48:52 EDT" name="setUp" finished-at="2022-10-04T15:48:53 EDT" duration-ms="935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="introLinkedlist()[pri:0, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:48:53 EDT" name="introLinkedlist" finished-at="2022-10-04T15:48:55 EDT" duration-ms="2542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- introLinkedlist -->
        <test-method signature="creatingLinkedList()[pri:1, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:48:55 EDT" name="creatingLinkedList" finished-at="2022-10-04T15:48:59 EDT" duration-ms="3094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatingLinkedList -->
        <test-method signature="typeOfLinkedList()[pri:2, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:48:59 EDT" name="typeOfLinkedList" finished-at="2022-10-04T15:49:02 EDT" duration-ms="3783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- typeOfLinkedList -->
        <test-method signature="implementLinkedList()[pri:3, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:49:02 EDT" name="implementLinkedList" finished-at="2022-10-04T15:49:05 EDT" duration-ms="2393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implementLinkedList -->
        <test-method signature="traversal()[pri:4, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:49:05 EDT" name="traversal" finished-at="2022-10-04T15:49:07 EDT" duration-ms="2540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- traversal -->
        <test-method signature="deletion()[pri:5, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:49:07 EDT" name="deletion" finished-at="2022-10-04T15:49:10 EDT" duration-ms="2522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletion -->
        <test-method signature="practiceQuestion()[pri:6, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:49:10 EDT" name="practiceQuestion" finished-at="2022-10-04T15:49:15 EDT" duration-ms="4882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practiceQuestion -->
        <test-method is-config="true" signature="logout()[pri:0, instance:numpyninja.Tests.LinkedListTest@38467116]" started-at="2022-10-04T15:49:15 EDT" name="logout" finished-at="2022-10-04T15:49:15 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
      </class> <!-- numpyninja.Tests.LinkedListTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
